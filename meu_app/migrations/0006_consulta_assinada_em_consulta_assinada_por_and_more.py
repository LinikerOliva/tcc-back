# Generated by Django 4.2.7 on 2025-08-26 19:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('meu_app', '0005_user_clinica_alter_user_role'),
    ]

    operations = [
        migrations.AddField(
            model_name='consulta',
            name='assinada_em',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='consulta',
            name='assinada_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consultas_assinadas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='consulta',
            name='assinatura_algoritmo',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='consulta',
            name='assinatura_carimbo_tempo',
            field=models.CharField(blank=True, max_length=256),
        ),
        migrations.AddField(
            model_name='consulta',
            name='assinatura_hash',
            field=models.CharField(blank=True, max_length=128),
        ),
        migrations.AddField(
            model_name='consulta',
            name='documento_assinado',
            field=models.FileField(blank=True, null=True, upload_to='assinaturas/consultas/'),
        ),
        migrations.AddField(
            model_name='exame',
            name='assinado_em',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='exame',
            name='assinado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exames_assinados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='exame',
            name='assinatura_algoritmo',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='exame',
            name='assinatura_carimbo_tempo',
            field=models.CharField(blank=True, max_length=256),
        ),
        migrations.AddField(
            model_name='exame',
            name='assinatura_hash',
            field=models.CharField(blank=True, max_length=128),
        ),
        migrations.AddField(
            model_name='exame',
            name='laudo_assinado',
            field=models.FileField(blank=True, null=True, upload_to='assinaturas/exames/'),
        ),
        migrations.AddField(
            model_name='receita',
            name='algoritmo_assinatura',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='receita',
            name='arquivo_assinado',
            field=models.FileField(blank=True, null=True, upload_to='assinaturas/receitas/'),
        ),
        migrations.AddField(
            model_name='receita',
            name='assinada_em',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='receita',
            name='assinada_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receitas_assinadas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='receita',
            name='carimbo_tempo',
            field=models.CharField(blank=True, max_length=256),
        ),
        migrations.AddField(
            model_name='receita',
            name='hash_documento',
            field=models.CharField(blank=True, max_length=128),
        ),
        migrations.AddField(
            model_name='user',
            name='mfa_backup_codes',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='user',
            name='mfa_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='mfa_secret',
            field=models.CharField(blank=True, max_length=64),
        ),
        migrations.CreateModel(
            name='DigitalCertificate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(blank=True, max_length=120)),
                ('tipo', models.CharField(choices=[('A1', 'A1'), ('A3', 'A3')], max_length=2)),
                ('provider', models.CharField(blank=True, help_text='ex.: local, token, cloud', max_length=50)),
                ('fingerprint', models.CharField(blank=True, max_length=128)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('issuer', models.CharField(blank=True, max_length=255)),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('arquivo', models.FileField(blank=True, help_text='Apenas para A1', null=True, upload_to='certificados/')),
                ('a3_reference', models.CharField(blank=True, help_text='Identificador do token/leitora para A3', max_length=120)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Certificado Digital',
                'verbose_name_plural': 'Certificados Digitais',
            },
        ),
        migrations.CreateModel(
            name='PatientAccessChallenge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('challenge_type', models.CharField(choices=[('pin', 'PIN'), ('otp', 'OTP'), ('qrcode', 'QR Code')], max_length=10)),
                ('code_hash', models.CharField(max_length=128)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('meta', models.JSONField(blank=True, default=dict, help_text='Metadados opcionais (ex.: salt, tentativa, ip)')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='challenges_criados', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenges', to='meu_app.paciente')),
            ],
            options={
                'verbose_name': 'Desafio de Acesso ao Prontuário',
                'verbose_name_plural': 'Desafios de Acesso ao Prontuário',
                'indexes': [models.Index(fields=['paciente', 'challenge_type', 'is_used'], name='meu_app_pat_pacient_ae4f0e_idx')],
            },
        ),
    ]
